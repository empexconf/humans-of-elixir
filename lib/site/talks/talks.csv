event,slug,title,youtube,description,speaker_name,speaker_slug,speaker_company,speaker_bio,speaker_twitter,speaker_interview
la_conference_2019,five-easy-ways-nerves,Five Easy Ways To Start With Nerves,,"Writing code that touches the real world is a magical experience. Nerves makes the software more approachable and much more powerful. Come see five fun projects that you can build from beginning to end without reading spec sheets or thinking about capacitors. From a garage controller, to LEDs and sprinkler controllers there are a lot of cool things you can build from scratch.",Michael Ries,michael-ries,,"Michael builds systems with Elixir and Ruby in Utah. He spends most evenings reading and building legos with his children. He organizes the Nerves Remote Meetup to discuss hardware and software with friends and hopes to one day build a robot that doesn't scare his children.
",mmmries,
la_conference_2019,where-do-i-put-my-data,Where did I put my data?,,"A look at how Amnesia's Elixir wrapper over Erlang's Mnesia distributed DBMS can be used to keep your application state in a scalable resilient manner. We will start by looking at Agents and GenServers as they are primarily the first thing people reach for when storing state. From there we will show how we can gain performance, remove bottlenecks, and increase stability by using ETS. Finally we examine how a more robust Amnesia solution can help systems scale beyond a single node, allowing the system to not only support higher loads but increase resiliency.",Alex Peachey,alex-peachey,Versus Systems,"Alex has been developing software for over two decades and has been focused on exploring and using Elixir for the past two years. Most recently he has worked with the rest of his great team at Versus Systems to rebuild the platform in Elixir, paving the way to making many more games more fun. When not crafting code, Alex enjoys playing games of all types.


",alex_peachey,
la_conference_2019,elixir-and-datadog,Elixir and Datadog,,"Having an Elixir application deployed it's crucial to have good insight into your architecture for multiple reasons. High level of observability helps you scale, improve your system's performance, optimise, debug and decide how to develop your product further.Good understanding of what your system is doing is even more important when it grows in time and uses more and more third party components that you don't have much influence over.

In my presentation I'm going to share my experience with integrating a significantly large Elixir system, with a state of the art monitoring service - Datadog. I'm going to explain how various features it offers, like metrics, live tracing, logging and analysis tools helped find number of non-obvious bottlenecks in the code.",Ludwik Bukowski,ludwik-bukowski,Erlang Solutions,"Ludwik is a functional programming enthusiast who to move with the times has been recently converted from Erlang to Elixir.

He works as Software Engineer in Erlang Solutions in KrakÃ³w, and likes to travel and play squash.",ludwikbukowski,
la_conference_2019,first-trillion-flow,Lessons From Our First Trillion Messages with Flow,,"For many of us recent Elixir converts, our initial attraction to Elixir was rooted in the promise of access to the BEAM concurrency model.

While this has been possible in Elixir from day one, Flow has made it incredibly easy to build highly concurrent and parallel data pipelines utilizing the BEAM. The problem is that while the docs are great, there aren't many resources about running Flow-based systems in production.

In this talk I'll share some of the lessons my team has learned from processing our first trillion messages through Flow. You'll leave with practical knowledge you can directly apply to your applications.

For the last year, my team & I have been using Flow to power a reactive, high volume and mission-critical data processing pipeline. In that time we've recognized some patterns and techniques to keep our system easy to reason about while also being flexible to handle a variety of requirements.",John Mertens,john-mertens,Change.org,"John is a problem solver who has spent the majority of his career using his technical skills to have a positive impact on the world around him. A former Code for America fellow and civic tech startup co-founder, he currently uses Elixir to empower social action at Change.org.",mertonium,
la_conference_2019,fake-it-til-you-make-it-haskell,Fake It 'Til You Make It (where it = Haskell expertise),,"In 2016, Magazine X asked Position Development to expand their existing Haskell app. Instead of only serving ecommerce forms via iframes in their WordPress website, their Haskell app would serve everything, including every article from the magazine and blog. Magazine X editors would continue to use WordPress to write and edit articles, but the Haskell server would request content through the WordPress JSON API and render templates. The magazine also wanted several new subscription, mailing list, and donation features. Early into the project, the original creator of the app left Position to begin a career in research. I was suddenly the most experienced Haskell developer on my team, while I still had less than a year of professional experience in tech. In this talk, I'll discuss both a) the technical aspects of the work and b) what it was like to try to make it all happen as part of a very small team of non-expert Haskellers. Some of the topics I'll touch on include:

- Larceny, our HTML templating language
- Offset, our library for rendering content from JSON APIs
- Position's workflow for developing, testing, and deploying Haskell apps
- Feeling disconnected from the larger language community, struggling with imposter syndrome, and continuing to learn and grow as a functional programmer 

In 2017, Magazine X relaunched with a bold new website. Getting to launch was a bit rocky, but for the past year we've been able to continue integrating more new features and designs into a fast, secure, and mobile-friendly Haskell app.
",Libby Horacek,libby-horacek,,"Libby is a software developer with an interest building excellent, sustainable technical infrastructure for growing organizations. In 2014, she received a grant to study at the Recurse Center, which allowed her to move from her home state of West Virginia to NYC. After studying functional programming at RC, she joined The Learning Collective, a group of activists teaching each other to create software for power-distant publics. There she met Daniel Patterson, then a worker-owner at Position, who encouraged her to apply to work with Position. Libby has also spoken at conferences and technical meetups including Allied Media Conference, !!Con, AlterConf DC, and Haskell Users Group.",horrorcheck,
la_conference_2019,elixir-api-accessible,Making your Elixir API Accessible to non-Elixir developers,,"This talk will describe tools, application best practices, and team collaboration tips that make consuming and working with an Elixir API easier for those not familiar with Elixir. I will talk about how I went from programing in only Javascript to working full stack at Versus Systems, what things we did to inspire engineers to work full stack. Some topics I will explore are useful testing, documentation, and scripts, as well as application organization, and effective teamwork.",Kalisa Falzone,kalisa-falzone,Versus Systems,"Kalisa Falzone is a Software Engineer at Versus Systems. She specializes in Javascript and React, but has been working with Elixir and full stack more recently. She has an educational background in Mathematics, loves board games and music.
",KalisaFalzone,
la_conference_2019,mix-feelings,You might say I have ðŸ•¶ mix feelings,,"Yes, Elixirâ€™s great, itâ€™s based on Erlang, making it fault tolerant and scalable. But a few months with it day-to day, am I still singing its praises?",Aaron Harpole,aaron-harpole,Carbon Five,"Originally hailing from the Midwest, Aaron made the trek out to Los Angeles in 2010 to work for one of those exciting internet startups heâ€™d been hearing so much about. Since then, heâ€™s led teams at LA-based startups Fullscreen and Ring, both of which are all grown up now. He currently works at Carbon Five, where heâ€™s been working with such languages as Ruby (his long time favorite) and more recently Elixir (current frontrunner to become new long time favorite). His clicky keyboard collection grows at a rate of about 1 per 1.4 months, but he can stop whenever he wants. ",haarpa01,
la_conference_2019,handling-null-functional-programming,Handling Null in Functional Programming,,"Nulls are a fact of lifeâ€”sometimes a value can be absent, which is important information to have However if a variable can be null, we often have to write extra code to handle that possibility. How can we utilize functional, typed languages to only allow null where it communicates important information and eliminate it everywhere else? This talk will identify patterns to do just that and discuss how they can help shape your applicationâ€™s architecture.",Evelyn Masso,evelyn-masso,GitHub,"Evelyn Masso is a person (all the time), a developer+designer (on weekdays), and a poet (on weekends). She currently works as an Application Engineer on the GitHub Desktop Client and contributes to p5js. 
",outofambit,
la_conference_2019,elixir-code-is-elixir-metaprogramming,Elixir Code is Elixir! Metaprogramming and Elixir,,"Elixir is a programming language that has become dear to me as it has become my go-to choice for most of the things at work and personal projects. One thing that people notice when getting started with Elixir is that, in fact, a good chunk of it is written in Elixir. Now you might be thinking, ""Wait. What? How can that be?"". Well, the short answer is: metaprogramming.

Metaprogramming doesnâ€™t have to be too scary to think about and itâ€™s not so bad at all. Iâ€™ll show examples of the standard library where functionality is written in Elixir and I will also dive into extending Elixir by writing our own macros. But by also diving into the Elixir-lang code base we can explore the bootstrap process and see how you can start implementing Elixir in Elixir.",Adrian Cruz,adrian-cruz,,"Adrian is a senior software engineer, runner, and sometimes a speaker. Adrian works on search, product discovery, and growth. He is an Elixir enthusiast and has contributed to Elixir-lang and its ecosystem. Outside of coding, he can be found running the streets of New York. ",drincruz,
la_conference_2019,go-vs-elixir,Go vs Elixir:  A concurrency comparison,,"As software engineers we often are looking for the best tool for the job. Yet what about when languages appear similar? What then?

In this talk we will compare Go and Elixir. These languages have similar principles but make core tradeoffs that affect when one might use them. We will specifically compare their concurrency paradigms to see what tool we might use when.",Anna Neyzberg,anna-neyzberg,Carbon Five,"Anna is a San Francisco native who has done a lot of work in the ruby community in SF and currently sits on the board of RailsBridge. She has taken this community organizing experience and several year go co-founded ElixirBridge in SF - an organization that offers free weekend-long workshops, with the goal of creating an inclusive welcoming space for underrepresented populations in tech to learn elixir. By day she works as a Developer at Carbon Five. When not in front of a keyboard, she is trying to get better at climbing rocks.",aneyzb,
la_conference_2019,go-vs-elixir,,,,Hannah Howard,hannah-howard,Carbon Five,"Hannah is a senior developer and tech generalist with over 15 years experience in programming and other technical fields. Prior to programming, Hannah worked for 10 years in the non-profit sector in Los Angeles, specializing in LGBT advocacy and community organizing. Hannah returned to coding in 2012 and brings her passion and experience from community organizing to helping new programmers get up to speed on technical topics",techgirlwonder,
la_conference_2019,rebuilding-bdd-testing-framework,Rebuilding a BDD Testing Framework (ESpec): Foundations in Metaprogramming ,,"You're a Test-Driven Development disciple, but you're a little iffy on this whole metaprogramming thing and it's something you don't feel comfortable using in your day to day programming.

If you've looked through the ExUnit codebase, or its RSpec-inspired cousin, ESpec (RSpec is a Ruby on Rails testing framework), you've probably noticed the defmacro keyword. That's because these test frameworks make use of metaprogramming to give you those lovely DSL's.

Don't know what the defmacro keyword does? Don't worry.

Even if you've never used Elixir's metaprogramming features before, come learn how to do it by seeing a real-life application of them. During this talk, we will rebuild a small part of our own version of ESpec. We'll duck and weave through Elixir's basic metaprogramming features all while building out test assertions and error messages, and you'll gain a whole new appreciation for metaprogramming.",Bruce Park,bruce-park,Versus Systems,"Bruce currently works as a developer at a company called Versus Systems based in Los Angeles, California. He occasionally contributes to Elixir open source libraries such as ESpec, a popular testing framework. In his spare time, he likes reading Tom Clancy novels and swimming along with a cup of coffee.",bpark0,
la_conference_2019,2019-closing-keynote,Closing Keynote,,,Ashi Krishnan,ashi-krishnan,,"Ashi is a visual poet who has been telling stories with code and words since she was a childâ€”perhaps before. She has worked at seven-person startups, fought fires in the trenches of SRE at Google, and spent the last three years teaching at coding bootcamps. She now works as a senior software engineer at GitHub, where she hopes to dissolve the walls between us and our tools. She is learning to regard every moment, and the creatures within them, with love.",rakshesha,
la_conference_2019,2019-opening-keynote,Opening Keynote,,"Architecting a highly concurrent distributed system in the BEAM ecosystem is not an easy thing to do even on a perfect world of homogeneous traffic, reliable, secure and low latency networks. But real life internet applications may have millions of users and bizarre faulty scenarios that can arise hidden scaling issues.

In this talk, I'll describe how the distribution model works in Erlang, and when/how you should take advantage of it â€“or not! Spiced up with real-life war stories from architectures running in production. Hopefully, you can learn from our mistakes!",Miriam Pena,miriam-pena,,"Miriam loves to architect distributed, scalable, high performance, high concurrency, and high availability systems. Bonus point if they are written in Erlang/Elixir. She is a Staff Engineer at AdRoll, designing critical parts of their AdServers/RTB infrastructure and organizer of the Erlang and Elixir meetup in San Francisco. Prior to AdRoll, she provided Erlang specialized consultancy and studied Computer Science Engineering from La CoruÃ±a University in Spain. Voted one of the women to watch in 2018 by Women 2.0 here. She published some open source libraries such as mero, a scalable and lightweight client for Memcached and Spillway for load shedding.
",miriampena,
la_conference_2018,2018-opening-keynote,Opening Keynote,KmM9nt7kg68,,Emma Cunningham,emma-cunningham,Second Spectrum,"Emma is a Senior Software Engineer at Second Spectrum, where she gets to solve all kinds of fun problems around how to build compelling data visualization and analytics apps for clients like the NBA and the LA Clippers. She is actively involved in various STEAM education equity initiatives in low-income communities across Los Angeles, including co-organizing YouthBuild Charter School of Californiaâ€™s CODEChella, serving on the Advisory Board at the Critical Design and Gaming School, teaching robotics and programming at Heart of Los Angeles, and co-directing Code Hawk Camp, an inclusive and free summer computer science camp for students in South LA.",emmatcu,https://medium.com/@empex/interview-with-2018-empex-la-keynote-speaker-emma-cunningham-70572a4d2e31
la_conference_2018,life-is-but-a-stream,Life is but a Stream,Bnqvz5W87Yo,A overview and dive into the Stream module. When should you use it over Enum? What are the pros and cons of using Stream for your day-to-day tasks? How are some of the functions implemented? We'll go into those questions and find some answers together.,Geoffrey Lessel,geoffrey-lessel,,"Geoffrey Lessel has been a web developer for over 15 yearsâ€”first with PHP and Perl and now with Ruby on Rails and Phoenix. He has spoken at ElixirConf, blogs about Elixir and Ecto at geoffreylessel.com, and tweets from @geolessel.",geolessel,
la_conference_2018,phoenix-contexts-and-ddd,Building beautiful systems with Phoenix contexts and Domain-Driven Design,oJghZB9sSuU,"Phoenix contexts are a powerful code organization tool - but without a clear idea of what business domains live under the hood of your systems, naively creating contexts leads to over-engineered, fragile systems.

Today, weâ€™ll learn about the philosophical roots of Bounded Contexts from the hard-earned wisdom of Domain-Driven Design. Weâ€™ll quickly get our hands dirty in the nuts and bolts of a Context Mapping exercise, a strategic design tool that reveals domain-specific system boundaries. With our newfound architectural vision, weâ€™ll learn how to write context-driven Phoenix code and develop some organizational rules around communication, boundary enforcement and testing between contexts. Weâ€™ll leverage the unique powers of Elixir that make this style of architecture so natural and see how using contexts easily leads to highly-cohesive and loosely-coupled outcomes!",Andrew Hao,andrew-hao,Carbon Five,"Andrew is a software engineer at Carbon Five, where he builds digital products for companies of all shapes and sizes. He enjoys trail running anywhere there are mountains. Though he currently lives in Oakland, he dearly misses his years living in (and eating through) Los Angeles.",andrewhao,
la_conference_2018,become-a-hex-power-user,Become a Hex Power User,47hDK6VNcLo,"We all use Hex every day on our Elixir projects, but how many of us really know everything Hex can do and how it works? Taking a deep dive into the Hex internals will show you some tips and tricks you can use on a future project.",Todd Resudek,todd-resudek,Weedmaps,"Todd is a Senior Software Engineer at Weedmaps, where he builds solutions for the cannabis industry. Previously, he has built solutions for the K-12 education market, worked in advertising, and as the front-end lead for Newegg.com. In his free time, he enjoys tinkering with hardware, woodworking, and spending time with his wife and 4 kids.",sprsmpl,https://medium.com/@empex/interview-with-2018-empex-la-speaker-todd-resudek-1112c14f25c8
la_conference_2018,adoption-panel,Adoption Panel,2TZOtdX1IAI,"This panel will discuss strategies for increasing Elixir adoption in your organization, and then take questions.",Shanti Chellaram,shanti-chellaram,Teachers Pay Teachers,"Shanti Chellaram is currently a senior engineer at Teachers Pay Teachers, with a year and a half of experience migrating a legacy PHP stack to Elixir. If she's not at a computer, she's trekking through the hills and mountains of New England.",theccoder,
la_conference_2018,adoption-panel,,,,Brandon Richey,brandon-richey,Greenhouse,"Brandon Richey is an Engineering Manager at Greenhouse and a long-time web developer. He's been working in Elixir for over two years now, and has successfully adopted Elixir at four companies! When not working on building an amazing recruiting product at Greenhouse, he also is spending time working on the technical side of the Cured Foundation, programming hobby projects, and working on his art. He has a book on Elixir and Phoenix development currently in progress, slated for release later this year",diamondgfx,
la_conference_2018,deployment-panel,Deployment Panel,PyZ_LD440vM,"This panel will discuss their elixir deployment strategies, and then take questions.",Desmond Bowe,desmond-bowe,Crevalle,"Desmond is the founder of EMPEX and a cohost of the popular ElixirTalk podcast. He also runs Crevalle, an Elixir training and development firm. In his free time he grows his mustache and plays pinball.",desmondmonster,
la_conference_2018,deployment-panel,,,,Benjamin Brodie,benjamin-brodie,Grindr,"A reformed java engineer from the advertisement space, Ben has embraced Elixir since joining Grindr's chat team. The chat team has embraced extreme programming with continuous deployment and pairing. Convinced by Elixir's performance and simplicity, Grindr has been adopting Elixir over Java in other other areas as well. Grindr now has the largest known Phoenix pubsub installation in the world",blbrodie,
la_conference_2018,deployment-panel,,,,Scott Taylor,scott-taylor,Motel,"Scott is a polygot engineer who writes Elixir as the lead engineer at Motel. At Motel, Scott crafts Elixir and mentors others. He also holds the record for most countries traveled to, most miles ran, and most slack emojis made of his face.",staylorwr,
la_conference_2018,ecto-schema-without-ecto-repo,Ecto.Schema without Ecto.Repo,BP-f3Kcqb1A,"With newer versions of Ecto you can use Ecto.Schema without even importing Ecto.Repo or setting up a traditional database.  Why would you wish to?

Your microservice or other lightweight app may not use a database but you'll probably still need to wrangle some serious data: complex params, JSON request/response bodies, RabbitMQ payloads, etc.  That's data that you'll need to parse, cast, and validate.

I'll step you through how to use Ecto.Schema on its own to cast and validate various kinds of data, and how to extract the final results whether the data is valid or invalid.

I'll also discuss some of the stumbling blocks and limitations I've encountered while leveraging Ecto.Schema in this way.",Rosemary Ledesma,rosemary-ledesma,RentPath LLC,"Rosemary is passionate about writing software with Elixir and Phoenix, and works as a back-end software engineer for RentPath LLC. In her spare time she enjoys hiking, swing-dancing, and rowing (crew).",rosemledesma,
la_conference_2018,shipping-replacement-architecture-in-elixir,Shipping a Replacement Architecture in Elixir,Aa--NDjL9SI&,"This talk will be a deep dive of how we spent the last 4 months replacing our Rails API and various Node.JS microservices with a single Elixir Umbrella Application. Weâ€™ve gone from no Elixir in production to replacing all but one of our services with it and launching and running those to power our Enterprise SaaS startup with hundreds of thousands of users.

During this talk weâ€™ll walk through:

* Application structure inside of the Umbrella (includes 3 separate Phoenix applications inside of it).
* How we modeled our async event bus powered by GenStage
* How we leveraged Flow to parallelize the syncing of millions of database records in record time
* Deploying our various services to ECS via Docker
* Monitoring and stat-ing our services
* Problems we encountered during the road to production
* The huge wins we got!

Weâ€™ll really dig into the real-world requirements of shipping and running a complex Elixir application with many moving parts; we'll be concentrated on the high level, with a few little dips into some specific parts of the app.",Chris Bell,chris-bell,Frame.io,"Chris is an Englishman in New York, where he works as the Director of Engineering at Frame.io, a startup that helps video teams collaborate. Heâ€™s an avid alchemist and helps organize the NYC branch of EMPEX as well as co-hosting a podcast, ElixirTalk.",cjbell_,
la_conference_2018,swarm-of-processes,A swarm of processes - simulating ant foraging behavior with OTP,NKJFL9LpP4M,"In this talk, we'll see a simulation of a foraging ant colony that can efficiently solve mazes, built using a separate OTP process for each ant. Along the way we'll look at GenServers, dynamic Supervisors, Registries, and more OTP goodness. Weâ€™ll also learn a little bit about ants!",Will Ockelmann-Wagner,will-wow,Carbon Five,"Will is a software developer at Carbon Five. He started his career in accounting, but found that automating his job away was more fun than the actual job, and moved over to software. Heâ€™s into typed functional programming and tiny keyboards.",WowItsWillWow,https://medium.com/@empex/interview-with-empex-la-speaker-will-ockerman-wagner-503d15b4295d
la_conference_2018,inclusion-starts-with-docs,Inclusion Starts With Docs,iLooRCq9hs0,"Great documentation is the single most powerful tool for increasing inclusion in a project. Docs can level the playing field between beginners and experts, providing everyone a better understanding of using and contributing to a library.

The feeling of creating a project, putting it out there, and watching people contribute to it is breathtaking -- it's one of the things that gets people hooked on participating in the free software ecosystem. High-quality docs get a project, and its creator, to that point faster.

Lucky for us, Elixir has best-in-class features for authoring and generating online documentation. In this talk, we'll examine and demonstrate Elixir's doc system, covering in particular:

An introduction to ExDoc
Top level project docs using @moduledoc
Function docs using @doc
Executable code samples using doctests
Type annotations and docs using typespecs
Linking your docs to your source code
Magically auto-updating install instructions
Documentation techniques and tactics for other kinds of projects (e.g. HTTP APIs)
This talk has two goals: to show the power of Elixir's built-in docs system, and more importantly to get folks excited about how strongly fantastic docs can improve a project and its community.",Pete Gamache,gamache,Appcues,"Pete is CTO at Appcues, where Elixir has been a boring part of the platform for two years and counting (and that's high praise). He enjoys pattern-matching, immutable data structures, and long walks on the beach. Follow him on Twitter.",gamache,https://medium.com/@empex/interview-with-empex-la-speaker-pete-gamache-61fd3a5640d4
la_conference_2018,2018-closing-keynote,Closing Keynote,i13pumwmq4E,,Sarah Gray,sarah-gray,,"Sarah has been a software developer since 2001, when she was spit out of grad school from ITP, NYUâ€™s interactive technology program. Prior to that, sheâ€™d been directing experimental theater, which gradually led her deeper and deeper into technology and code. Since 2001, sheâ€™s worked on a cross-section of projects across different industries. Highlights include building medical software at Mt. Sinai Hospital; leading the technology integration for startup Trunk Club when they were acquired by Nordstrom; and working on Hillary Clintonâ€™s tech team in Brooklyn. In 2017 she learned how to program for the Ethereum blockchain, because in The Future (TM) we will all be on the blockchain. Sarahâ€™s career is predicated on a mix of exploring the new while maintaining solid software development practices in order to make projects come to life. Because of her dual background in coding and experimental performance, she is constantly playing with forms, and putting together new, short-lived (theater-life-span) projects. Weâ€™re excited for Sarah to bring her breadth of experience to keynote at Empex LA!
",fablednet,